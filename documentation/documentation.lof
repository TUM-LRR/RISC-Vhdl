\select@language {ngerman}
\contentsline {figure}{\numberline {1}{\ignorespaces Das verwendete Entwicklungsboard von oben, der FPGA liegt zentral}}{5}{figure.0.1}
\contentsline {figure}{\numberline {2}{\ignorespaces \"Ubersicht \"uber den Projektablauf}}{6}{figure.0.2}
\contentsline {figure}{\numberline {3}{\ignorespaces Der Xilinx ISE Project Navigator}}{7}{figure.0.3}
\contentsline {figure}{\numberline {4}{\ignorespaces Zustands\"ubergangsdiagramm der Befehle \textbf {ADD[I]}, \textbf {SUB}, \textbf {SLT[I][U]}, \textbf {AND[I]}, \textbf {OR[I]}, \textbf {XOR[I]}, \textbf {SLL[I]}, \textbf {SRL[I]}, \textbf {SRA[I]}, \textbf {MUL[W]} und \textbf {MULH[[S]U]}. \(op2\) ist entweder das Register, das mit \emph {rs2} angegeben ist, oder eine Immediate (\emph {imm}). ``\(\circ \)'' repr\"asentiert die jeweilige Operation (\(+\), \(-\), \dots {}). }}{8}{figure.0.4}
\contentsline {figure}{\numberline {5}{\ignorespaces Zustands\"ubergangsdiagramm der Befehle \textbf {DIV[U][W]} und \textbf {REM[U][W]}. }}{9}{figure.0.5}
\contentsline {figure}{\numberline {6}{\ignorespaces Zustands\"ubergangsdiagramm der Befehle \textbf {LUI} und \textbf {AUPIC}. }}{9}{figure.0.6}
\contentsline {figure}{\numberline {7}{\ignorespaces Zustands\"ubergangsdiagramm der Befehle \textbf {BEQ} und \textbf {BGE[U]}. ``\(\circ \)'' ist bei \textbf {BEQ} ``\(-\)'', bei \textbf {BGE} die SLT-Operation und bei \textbf {BGEU} die SLTU-Operation. }}{9}{figure.0.7}
\contentsline {figure}{\numberline {8}{\ignorespaces Zustands\"ubergangsdiagramm der Befehle \textbf {BNE} und \textbf {BLT[U]}. ``\(\circ \)'' ist bei \textbf {BNE} ``\(-\)'', bei \textbf {BLT} die SLT-Operation und bei \textbf {BLTU} die SLTU-Operation. }}{10}{figure.0.8}
\contentsline {figure}{\numberline {9}{\ignorespaces Zustands\"ubergangsdiagramm der Befehle \textbf {JAL} und \textbf {JALR}. \(op2\) ist bei \textbf {JAL} der Program-Counter und bei \textbf {JALR} das Register, welches durch \emph {rs1} adressiert wird. }}{10}{figure.0.9}
\contentsline {figure}{\numberline {10}{\ignorespaces Zustands\"ubergangsdiagramm der Befehle \textbf {LB[U]}, \textbf {LH[U]} und \textbf {LW}. \(width\) ist je nach Befehl 1,~2~oder~4. }}{10}{figure.0.10}
\contentsline {figure}{\numberline {11}{\ignorespaces Zustands\"ubergangsdiagramm des Befehle \textbf {SB}, \textbf {SH} und \textbf {SW}. \(width\) ist je nach Befehl 1, 2 oder 4. }}{11}{figure.0.11}
\contentsline {figure}{\numberline {12}{\ignorespaces Zustands\"ubergangsdiagramm der Befehle \textbf {RDINSTRET[H]}, \textbf {RDCYCLE[H]} und \textbf {RDTIME[H]}. \(counter\) sind die oberen bzw. unteren 32 Bit des jeweiligen 64 Bit Z\"ahlers. }}{11}{figure.0.12}
\contentsline {figure}{\numberline {13}{\ignorespaces Zustands\"ubergangsdiagramm für die Befehlsausführung innerhalb der ALU }}{13}{figure.0.13}
\contentsline {figure}{\numberline {14}{\ignorespaces Schnittstelle der MMU-Einheit, Signale farblich gruppiert: \textit {Rot} = Kommunikation mit Leitwerk, \textit {Gr\"un} = Character-Ausgabe an ASCII-Einheit, \textit {Violett} = Verbindung mit DDR2-SDRAM, \textit {Gelb} = Sonstige}}{16}{figure.0.14}
\contentsline {figure}{\numberline {15}{\ignorespaces Verteilung der I/O-Signale}}{19}{figure.0.15}
\contentsline {figure}{\numberline {16}{\ignorespaces Zustands\"ubergangsdiagramm der MMU. \"Uberg\"ange zum Zustand \textbf {MMU-RESET}, die von jedem anderen Zustand durch \texttt {rst\_in = '1'} ausgel\"ost werden, sind der \"Ubersicht halber ausgelassen. }}{19}{figure.0.16}
\contentsline {figure}{\numberline {17}{\ignorespaces Beispiel f\"ur Textausgabe: jedes darstellbare Zeichen wird abgebildet}}{21}{figure.0.17}
\contentsline {figure}{\numberline {18}{\ignorespaces Veranschaulichung der Adressberechnung anhand des Pixelfelds des Monitors: Links oben wird von 0 ab nach rechts zeilenweise hochgez\"ahlt. Die Adresse des Zeichenfeldes zu dem ein Pixel mit Position (x,y) geh\"ort wird wie folgt berechnet: $\delimiter "4262304 \frac {x}{8} \delimiter "5263305 + \delimiter "4262304 \frac {y}{8} \delimiter "5263305 * 64$. Aus dem 64-Bit-Vektor berechnet man das Bit f\"ur das aktuelle Pixel so: $(x\tmspace +\medmuskip {.2222em} mod\tmspace +\medmuskip {.2222em} 8) + (y\tmspace +\medmuskip {.2222em} mod\tmspace +\medmuskip {.2222em} 8) * 8$}}{22}{figure.0.18}
\contentsline {figure}{\numberline {19}{\ignorespaces Das Interface der ASCII-Unit}}{23}{figure.0.19}
\contentsline {figure}{\numberline {20}{\ignorespaces \"Ubersicht: Beginn bei x- bzw. y-Koordinate; Verrechnung dieser zur Adresse f\"ur CHARRAM; dann Durchleiten in CHARMAP; anschlie\ss {}end Berechnung des Pixels; letztendlich Zurücksenden an VGA-Unit}}{24}{figure.0.20}
\contentsline {figure}{\numberline {21}{\ignorespaces VGA-Ausgabe im Debugging-Modus: PC und IR liegen zentral}}{25}{figure.0.21}
\contentsline {figure}{\numberline {22}{\ignorespaces Bildschirmausgabe w\"ahrend der Ausf\"uhrung des Demo-Programms}}{26}{figure.0.22}
